version: "3.7"

networks:
    app-network:
        driver: bridge

services:
    app:
        build:
            context: ./
            dockerfile: Dockerfile
        image: laravel8-php-fpm-80
        container_name: app
        restart: unless-stopped
        tty: true
        working_dir: /var/www
        volumes:
            - ./:/var/www
        networks:
            - app-network

    mysql:
        image: mysql:5.7.33
        container_name: mysql-vlpi
        restart: unless-stopped
        tty: true
        environment:
            MYSQL_DATABASE: "vlpidb"
            MYSQL_ROOT_PASSWORD: "password"
            MYSQL_PASSWORD: "password"
            MYSQL_USER: "user"
            SERVICE_TAGS: "dev"
            SERVICE_NAME: "mysql"
        ports:
            # Exposed Port : Container Port
            - '3310:3306'
        volumes:
            - ./docker/mysql/data:/var/lib/mysql
        networks:
            - app-network

    nginx:
        image: nginx:1.19.8-alpine
        container_name: nginx
        restart: unless-stopped
        tty: true
        ports:
            - "8100:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx/conf:/etc/nginx/conf.d
        networks:
            - app-network

    app-setup:
        depends_on:
            - app
        restart: "no"
        container_name: setup-app
        image: laravel8-php-fpm-80
        build:
            context: ./
            dockerfile: Dockerfile
        working_dir: /var/www
        volumes:
            - ./:/var/www
        entrypoint: [ "bash", "-c", "composer install -n -q && php artisan -q scribe:generate" ]
        networks:
            - app-network
